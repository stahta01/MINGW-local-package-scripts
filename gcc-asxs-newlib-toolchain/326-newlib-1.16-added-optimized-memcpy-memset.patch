From ad0aee4e768cf06b97b2c8c4315292134ce5b607 Mon Sep 17 00:00:00 2001
From: dfffffff <dflamand@gmail.com>
Date: Thu, 9 Jun 2016 14:38:57 -0400
Subject: [PATCH 22/37] added optimized memcpy memset

---
 newlib/configure.host                  |  9 +++---
 newlib/libc/machine/m6809/Makefile.am  |  4 ++-
 newlib/libc/machine/m6809/Makefile.in  | 18 +++++++++--
 newlib/libc/machine/m6809/configure.in |  2 +-
 newlib/libc/machine/m6809/memcpy.S     | 45 ++++++++++++++++++++++++++
 newlib/libc/machine/m6809/memset.S     | 44 +++++++++++++++++++++++++
 6 files changed, 113 insertions(+), 9 deletions(-)
 create mode 100644 newlib/libc/machine/m6809/memcpy.S
 create mode 100644 newlib/libc/machine/m6809/memset.S

diff --git a/newlib/configure.host b/newlib/configure.host
index 9b28568..5f9d53a 100644
--- a/newlib/configure.host
+++ b/newlib/configure.host
@@ -442,16 +442,15 @@ case "${host}" in
 	##newlib_cflags="${newlib_cflags} -idirafter ${gcc_dir}include"
 	;;
   m6809-coco-*)
-   sys_dir=coco
+	sys_dir=coco
 	have_crt0="no"
-   ;;
+	;;
   m6809-*-*)
-   sys_dir=m6809sim
+	sys_dir=m6809sim
 	have_crt0="no"
-   ;;
+	;;
   m68hc11-*-*|m6811-*-*|m6812-*-*|m68hc12-*-*)
 	;;
-
   m68k-sun-sunos*)
 	unix_dir=unix
 	;;
diff --git a/newlib/libc/machine/m6809/Makefile.am b/newlib/libc/machine/m6809/Makefile.am
index f0999ba..746c02b 100644
--- a/newlib/libc/machine/m6809/Makefile.am
+++ b/newlib/libc/machine/m6809/Makefile.am
@@ -4,9 +4,11 @@ AUTOMAKE_OPTIONS = cygnus
 
 INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
 
+AM_CCASFLAGS = $(INCLUDES)
+
 noinst_LIBRARIES = lib.a
 
-lib_a_SOURCES = setjmp.S
+lib_a_SOURCES = setjmp.S memcpy.S memset.S
 lib_a_CCASFLAGS=$(AM_CCASFLAGS)
 lib_a_CFLAGS=$(AM_CFLAGS)
 
diff --git a/newlib/libc/machine/m6809/Makefile.in b/newlib/libc/machine/m6809/Makefile.in
index 101cfc4..a8b7baf 100644
--- a/newlib/libc/machine/m6809/Makefile.in
+++ b/newlib/libc/machine/m6809/Makefile.in
@@ -54,7 +54,8 @@ LIBRARIES = $(noinst_LIBRARIES)
 ARFLAGS = cru
 lib_a_AR = $(AR) $(ARFLAGS)
 lib_a_LIBADD =
-am_lib_a_OBJECTS = lib_a-setjmp.$(OBJEXT)
+am_lib_a_OBJECTS = lib_a-setjmp.$(OBJEXT) lib_a-memcpy.$(OBJEXT) \
+	lib_a-memset.$(OBJEXT)
 lib_a_OBJECTS = $(am_lib_a_OBJECTS)
 DEFAULT_INCLUDES = -I. -I$(srcdir)
 depcomp =
@@ -179,8 +180,9 @@ sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 AUTOMAKE_OPTIONS = cygnus
 INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
+AM_CCASFLAGS = $(INCLUDES)
 noinst_LIBRARIES = lib.a
-lib_a_SOURCES = setjmp.S
+lib_a_SOURCES = setjmp.S memcpy.S memset.S
 lib_a_CCASFLAGS = $(AM_CCASFLAGS)
 lib_a_CFLAGS = $(AM_CFLAGS)
 ACLOCAL_AMFLAGS = -I ../../..
@@ -247,6 +249,18 @@ lib_a-setjmp.o: setjmp.S
 
 lib_a-setjmp.obj: setjmp.S
 	$(CCAS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-setjmp.obj `if test -f 'setjmp.S'; then $(CYGPATH_W) 'setjmp.S'; else $(CYGPATH_W) '$(srcdir)/setjmp.S'; fi`
+
+lib_a-memcpy.o: memcpy.S
+	$(CCAS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-memcpy.o `test -f 'memcpy.S' || echo '$(srcdir)/'`memcpy.S
+
+lib_a-memcpy.obj: memcpy.S
+	$(CCAS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-memcpy.obj `if test -f 'memcpy.S'; then $(CYGPATH_W) 'memcpy.S'; else $(CYGPATH_W) '$(srcdir)/memcpy.S'; fi`
+
+lib_a-memset.o: memset.S
+	$(CCAS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-memset.o `test -f 'memset.S' || echo '$(srcdir)/'`memset.S
+
+lib_a-memset.obj: memset.S
+	$(CCAS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-memset.obj `if test -f 'memset.S'; then $(CYGPATH_W) 'memset.S'; else $(CYGPATH_W) '$(srcdir)/memset.S'; fi`
 uninstall-info-am:
 
 ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
diff --git a/newlib/libc/machine/m6809/configure.in b/newlib/libc/machine/m6809/configure.in
index 6bce3d4..7842c2d 100644
--- a/newlib/libc/machine/m6809/configure.in
+++ b/newlib/libc/machine/m6809/configure.in
@@ -1,4 +1,4 @@
-dnl This is the newlib/libc/machine/m68k configure.in file.
+dnl This is the newlib/libc/machine/m6809 configure.in file.
 dnl Process this file with autoconf to produce a configure script.
 
 AC_PREREQ(2.59)
diff --git a/newlib/libc/machine/m6809/memcpy.S b/newlib/libc/machine/m6809/memcpy.S
new file mode 100644
index 0000000..138cc08
--- /dev/null
+++ b/newlib/libc/machine/m6809/memcpy.S
@@ -0,0 +1,45 @@
+;;;
+;;; Copyright 2016 by David Flamand <dflamand@gmail.com>
+;;;
+;;; memcpy for m6809
+;;;
+;;;  support for -mdret
+;;;  optimization: copy 2 byte at a time
+;;;
+;;;  TODO: support stack only args
+;;;
+
+	.module memcpy.S
+	.area .text
+
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;
+; void *memcpy(void *dest, const void *src, size_t n)
+;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+	.globl _memcpy
+_memcpy:
+	pshs	u,y,x
+	ldd	10,s
+	beq	_l2
+	leay	,x
+	tfr	d,x
+	ldu	8,s
+	bitb	#1
+	beq	_l1
+	ldb	,u+
+	stb	,y+
+	leax	-1,x
+	beq	_l2
+_l1:	ldd	,u++
+	std	,y++
+	leax	-2,x
+	bne	_l1
+_l2:
+#ifdef __DRET__
+	puls	d,y,u,pc
+#else
+	puls	x,y,u,pc
+#endif
+
diff --git a/newlib/libc/machine/m6809/memset.S b/newlib/libc/machine/m6809/memset.S
new file mode 100644
index 0000000..c06c7a4
--- /dev/null
+++ b/newlib/libc/machine/m6809/memset.S
@@ -0,0 +1,44 @@
+;;;
+;;; Copyright 2016 by David Flamand <dflamand@gmail.com>
+;;;
+;;; memset for m6809
+;;;
+;;;  support for -mdret
+;;;  optimization: set 2 byte at a time
+;;;
+;;;  TODO: support stack only args
+;;;
+
+	.module memset.S
+	.area .text
+
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;
+; void *memset(void *s, int c, size_t n)
+;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+	.globl _memset
+_memset:
+	pshs	y,x
+	ldd	8,s
+	beq	_l3
+	leay	,x
+	tfr	d,x
+	lda	6+1,s
+	bitb	#1
+	beq	_l1
+	sta	,y+
+	leax	-1,x
+	beq	_l3
+_l1:	tfr	a,b
+_l2:	std	,y++
+	leax	-2,x
+	bne	_l2
+_l3:
+#ifdef __DRET__
+	puls	d,y,pc
+#else
+	puls	x,y,pc
+#endif
+
-- 
2.19.1.windows.1

